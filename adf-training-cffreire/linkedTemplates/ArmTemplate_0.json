{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-training-cffreire"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"ls_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsfuturoinfonoprod.dfs.core.windows.net"
		},
		"ls_restService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://worldclockapi.com/api/json/utc/now"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PLCondicional')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uso del condicional",
				"activities": [
					{
						"name": "Condicional Par o impar",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(mod(pipeline().parameters.numero, 2), 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Resultado impar",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "El número @{pipeline().parameters.numero} es impar",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Resuldado Par",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "El número @{pipeline().parameters.numero} es Par",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLFechaDefecto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fecha Corte",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaCorteVar",
							"value": {
								"value": "@coalesce(pipeline().parameters.fechaCorte, utcnow())",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha Corte Formato",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "fecha Corte",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaCorteFormato",
							"value": {
								"value": "@formatDateTime(variables('fechaCorteVar'), 'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"fechaCorte": {
						"type": "string"
					}
				},
				"variables": {
					"fechaCorteVar": {
						"type": "String"
					},
					"fechaCorteFormato": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLFormulaFechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Actual",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaActual",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha Inicio Mes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaInicioMes",
							"value": {
								"value": "@startOfMonth(variables('fechaActual'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha formato",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha Inicio Mes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaFormato",
							"value": {
								"value": "@formatDateTime(variables('fechaActual'), 'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Agregar 1 mes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha formato",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaSumaPeriodo",
							"value": {
								"value": "@addToTime(variables('fechaInicioMes'), 1, 'month')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha fin de mes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Agregar 1 mes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaFinMes",
							"value": {
								"value": "@addToTime(variables('fechaSumaPeriodo'), -1, 'day')",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"fechaActual": {
						"type": "String"
					},
					"fechaFormato": {
						"type": "String"
					},
					"fechaInicioMes": {
						"type": "String"
					},
					"fechaSumaPeriodo": {
						"type": "String"
					},
					"fechaFinMes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLFormulaParImpar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Determinar si un numero es par o impar",
				"activities": [
					{
						"name": "Obtener Par Impar",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultado",
							"value": {
								"value": "@if( equals( mod(pipeline().parameters.numero,2),0)\n, concat(string(pipeline().parameters.numero), ' Es Par')\n, concat(string(pipeline().parameters.numero),' Es impar')\n)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int"
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLHolaMundo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline Hola Mundo",
				"activities": [
					{
						"name": "Establecer Variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "saludo",
							"value": "Hola Mundo"
						}
					}
				],
				"variables": {
					"saludo": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLSwitch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uso de Switch",
				"activities": [
					{
						"name": "Operaciones",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.caso",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "A",
									"activities": [
										{
											"name": "Suma",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "resultado",
												"value": {
													"value": "@string(add(pipeline().parameters.numero1, pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "B",
									"activities": [
										{
											"name": "Multiplicacion",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "resultado",
												"value": {
													"value": "@string(mul(pipeline().parameters.numero1, pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "C",
									"activities": [
										{
											"name": "Division",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "resultado",
												"value": {
													"value": "@string(div(pipeline().parameters.numero1, pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Sin valor",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "No existe valor",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"caso": {
						"type": "string",
						"defaultValue": "X"
					},
					"numero1": {
						"type": "int",
						"defaultValue": 10
					},
					"numero2": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLWait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uso de la actividad Wait",
				"activities": [
					{
						"name": "Esperar",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Fecha de inicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Fecha de inicio",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha de fin",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Esperar",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLWebService')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Consumir servicio rest",
				"activities": [
					{
						"name": "Consultar Hora Universal",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://worldclockapi.com/api/json/utc/now",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Obtenner Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Consultar Hora Universal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "dayOfTheWeek",
							"value": {
								"value": "@activity('Consultar Hora Universal').output.dayOfTheWeek",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"dayOfTheWeek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AzureDataLakeStorage1",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8141864857821252.12.azuredatabricks.net/",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_accessToken')]"
					},
					"existingClusterId": "0415-015515-wooer670"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_restService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_restService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/irConexionLocal')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Conexion local integration services",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLEjecutarSP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ejecutar SP",
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Saludar]",
							"storedProcedureParameters": {
								"nombre": {
									"value": "Data Factory",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLNotebookDatabricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Integración Azure con databricks",
				"activities": [
					{
						"name": "Integracion Databricks",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/TRAINING_DATAFACTORY/PY_HolaDatafactory"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase3"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "pruebaADF"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_41')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directorio": {
						"type": "string"
					},
					"nombreArchivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().nombreArchivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directorio",
							"type": "Expression"
						},
						"fileSystem": "aci-cffreire"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EjecutarSP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Saludo",
						"folderPath": "Resultado",
						"fileSystem": "aci-cffreire"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvRestService')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "consulta.csv",
						"folderPath": "Resultado",
						"fileSystem": "aci-cffreire"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		}
	]
}