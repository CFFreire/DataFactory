{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-training-cffreire"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"ls_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsfuturoinfonoprod.dfs.core.windows.net"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\D\\DataFactory"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "BGR1\\Usuario"
		},
		"ls_restService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://worldclockapi.com/api/json/utc/now"
		},
		"SCCargaInicial_properties_PLCargaRangoFechasTrigger_parameters_fechaInicial": {
			"type": "string",
			"defaultValue": "2021-01-01"
		},
		"SCCargaInicial_properties_PLCargaRangoFechasTrigger_parameters_fechaFinal": {
			"type": "string",
			"defaultValue": "2021-05-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PLCargaRangoFechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga Rango Fechas",
				"activities": [
					{
						"name": "Rango Fechas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @MinDate DATE = '@{pipeline().parameters.fechaInicial}',\n        @MaxDate DATE = '@{pipeline().parameters.fechaFinal}';\n\nSELECT CONVERT(varchar,fechaCorte,23) AS fechaCorte, MONTH(fechaCorte) as mesCorte, YEAR(fechaCorte) as anioCorte\nFROM\n(\n\tSELECT  \n\tTOP (DATEDIFF(MONTH, @MinDate, @MaxDate) + 1)\n\tfechaCorte = EOMONTH(DATEADD(MONTH, ROW_NUMBER() OVER(ORDER BY a.object_id) - 1, @MinDate))\n\tFROM    sys.all_objects a \n\tCROSS JOIN sys.all_objects b\n)fechas\n\nORDER BY fechaCorte;\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Rango Fechas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Rango Fechas').output.value)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "PLIncremental",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PLIncremental",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"anio": {
												"value": "@item().anioCorte",
												"type": "Expression"
											},
											"mes": {
												"value": "@item().mesCorte",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"fechaInicial": {
						"type": "string"
					},
					"fechaFinal": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/pipelines/PLIncremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLCondicional')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uso del condicional",
				"activities": [
					{
						"name": "Condicional Par o impar",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(mod(pipeline().parameters.numero, 2), 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Resultado impar",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "El número @{pipeline().parameters.numero} es impar",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Resuldado Par",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "El número @{pipeline().parameters.numero} es Par",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLCopiaArchivo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pipeline copia archivo",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csv_clase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/datasets/csv_clase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLCopiaArchivoNubeALocal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copiar a archivo desde la nube a una fuente local",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_clase2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv_clase2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLEjecutarSP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ejecutar SP",
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Saludar]",
							"storedProcedureParameters": {
								"nombre": {
									"value": "Data Factory",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLEjecutarSP2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ejecutar SP 2",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Saludar]",
								"storedProcedureParameters": {
									"nombre": {
										"type": "String",
										"value": "Data Factory 2"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_EjecutarSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EjecutarSP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLFechaDefecto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fecha Corte",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaCorteVar",
							"value": {
								"value": "@coalesce(pipeline().parameters.fechaCorte, utcnow())",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha Corte Formato",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "fecha Corte",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaCorteFormato",
							"value": {
								"value": "@formatDateTime(variables('fechaCorteVar'), 'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"fechaCorte": {
						"type": "string"
					}
				},
				"variables": {
					"fechaCorteVar": {
						"type": "String"
					},
					"fechaCorteFormato": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLFormulaFechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fecha Actual",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaActual",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha Inicio Mes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaInicioMes",
							"value": {
								"value": "@startOfMonth(variables('fechaActual'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha formato",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha Inicio Mes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaFormato",
							"value": {
								"value": "@formatDateTime(variables('fechaActual'), 'dd/MM/yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Agregar 1 mes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha formato",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaSumaPeriodo",
							"value": {
								"value": "@addToTime(variables('fechaInicioMes'), 1, 'month')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha fin de mes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Agregar 1 mes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechaFinMes",
							"value": {
								"value": "@addToTime(variables('fechaSumaPeriodo'), -1, 'day')",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"fechaActual": {
						"type": "String"
					},
					"fechaFormato": {
						"type": "String"
					},
					"fechaInicioMes": {
						"type": "String"
					},
					"fechaSumaPeriodo": {
						"type": "String"
					},
					"fechaFinMes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLFormulaParImpar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Determinar si un numero es par o impar",
				"activities": [
					{
						"name": "Obtener Par Impar",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultado",
							"value": {
								"value": "@if( equals( mod(pipeline().parameters.numero,2),0)\n, concat(string(pipeline().parameters.numero), ' Es Par')\n, concat(string(pipeline().parameters.numero),' Es impar')\n)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int"
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLHolaMundo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline Hola Mundo",
				"activities": [
					{
						"name": "Establecer Variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "saludo",
							"value": "Hola Mundo"
						}
					}
				],
				"variables": {
					"saludo": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLIncremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Incremental",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT [idFactura]\n      ,[idCliente]\n      ,[idEmpleado]\n      ,[fechaFactura]\n      ,[subtotal]\n      ,[impuestos]\n  FROM [dbo].[Factura]\n  WHERE YEAR([fechaFactura])=@{pipeline().parameters.anio} AND MONTH(fechaFactura)=@{pipeline().parameters.mes}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_41",
								"type": "DatasetReference",
								"parameters": {
									"directorio": {
										"value": "Factura/@{pipeline().parameters.anio}/@{pipeline().parameters.mes}",
										"type": "Expression"
									},
									"nombreArchivo": "Factura.csv"
								}
							}
						]
					}
				],
				"parameters": {
					"anio": {
						"type": "int",
						"defaultValue": 0
					},
					"mes": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/CSV_41')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLNotebookDatabricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Integración Azure con databricks",
				"activities": [
					{
						"name": "Integracion Databricks",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/TRAINING_DATAFACTORY/PY_HolaDatafactory"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLSwitch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uso de Switch",
				"activities": [
					{
						"name": "Operaciones",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.caso",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "A",
									"activities": [
										{
											"name": "Suma",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "resultado",
												"value": {
													"value": "@string(add(pipeline().parameters.numero1, pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "B",
									"activities": [
										{
											"name": "Multiplicacion",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "resultado",
												"value": {
													"value": "@string(mul(pipeline().parameters.numero1, pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "C",
									"activities": [
										{
											"name": "Division",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "resultado",
												"value": {
													"value": "@string(div(pipeline().parameters.numero1, pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Sin valor",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "No existe valor",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"caso": {
						"type": "string",
						"defaultValue": "X"
					},
					"numero1": {
						"type": "int",
						"defaultValue": 10
					},
					"numero2": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLTablaLocalNube')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copiar informacion desde una base de datos sql server",
				"activities": [
					{
						"name": "Copiar informacion SQL Local - Azure SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CatalogoLocal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Clase3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CatalogoLocal')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLTablaLocalNubeMapeo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copiar informacion desde una base de datos sql server",
				"activities": [
					{
						"name": "SQL Local - Azure SQL con mapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT Id AS Id2,\n  Codigo AS Codigo2,\n  Descripcion AS Descripcion2\nFROM Catalogo",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id2",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Codigo2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Descripcion2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Descripcion",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CatalogoLocal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Clase3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CatalogoLocal')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLWait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uso de la actividad Wait",
				"activities": [
					{
						"name": "Esperar",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Fecha de inicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Fecha de inicio",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha de fin",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Esperar",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLWebService')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Consumir servicio rest",
				"activities": [
					{
						"name": "Consultar Hora Universal",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://worldclockapi.com/api/json/utc/now",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Obtenner Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Consultar Hora Universal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "dayOfTheWeek",
							"value": {
								"value": "@activity('Consultar Hora Universal').output.dayOfTheWeek",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"dayOfTheWeek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLWebServiceDataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Consumir web service como dataset",
				"activities": [
					{
						"name": "Copiar desde Rest Service",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "datasetRest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataLakeJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datasetRest')]",
				"[concat(variables('factoryId'), '/datasets/dataLakeJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLWebServiceDatasetCSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Consumir web service como dataset",
				"activities": [
					{
						"name": "Copiar desde Rest Service",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['$id']"
										},
										"sink": {
											"name": "id",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['currentDateTime']"
										},
										"sink": {
											"name": "currentDateTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['utcOffset']"
										},
										"sink": {
											"name": "utcOffset",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['isDayLightSavingsTime']"
										},
										"sink": {
											"name": "isDayLightSavingsTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dayOfTheWeek']"
										},
										"sink": {
											"name": "dayOfTheWeek",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['timeZoneName']"
										},
										"sink": {
											"name": "timeZoneName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['currentFileTime']"
										},
										"sink": {
											"name": "currentFileTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ordinalDate']"
										},
										"sink": {
											"name": "ordinalDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['serviceResponse']"
										},
										"sink": {
											"name": "serviceResponse",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "datasetRest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "csvRestService",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Clase5 Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datasetRest')]",
				"[concat(variables('factoryId'), '/datasets/csvRestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase3"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "pruebaADF"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_41')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directorio": {
						"type": "string"
					},
					"nombreArchivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().nombreArchivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directorio",
							"type": "Expression"
						},
						"fileSystem": "aci-cffreire"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EjecutarSP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Saludo",
						"folderPath": "Resultado",
						"fileSystem": "aci-cffreire"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CatalogoLocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Conexion a catalogo local",
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase3"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Catalogo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "DescargaArchivo.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "archivo.xlsx"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvRestService')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "consulta.csv",
						"folderPath": "Resultado",
						"fileSystem": "aci-cffreire"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_clase2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Prueba.csv",
						"folderPath": "Clase2",
						"fileSystem": "aci-cffreire"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataLakeJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "consulta.json",
						"folderPath": "Resultado",
						"fileSystem": "aci-cffreire"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasetRest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_restService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase5 Asincrona"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_restService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AzureDataLakeStorage1",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "irConexionLocal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/irConexionLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "irConexionLocal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/irConexionLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8141864857821252.12.azuredatabricks.net/",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_accessToken')]"
					},
					"existingClusterId": "0415-015515-wooer670"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_restService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_restService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/irConexionLocal')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Conexion local integration services",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLCargaRangoFechasTrigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga Rango Fechas",
				"activities": [
					{
						"name": "Rango Fechas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @MinDate DATE = '@{pipeline().parameters.fechaInicial}',\n        @MaxDate DATE = '@{pipeline().parameters.fechaFinal}';\n\nSELECT CONVERT(varchar,fechaCorte,23) AS fechaCorte, MONTH(fechaCorte) as mesCorte, YEAR(fechaCorte) as anioCorte\nFROM\n(\n\tSELECT  \n\tTOP (DATEDIFF(MONTH, @MinDate, @MaxDate) + 1)\n\tfechaCorte = EOMONTH(DATEADD(MONTH, ROW_NUMBER() OVER(ORDER BY a.object_id) - 1, @MinDate))\n\tFROM    sys.all_objects a \n\tCROSS JOIN sys.all_objects b\n)fechas\n\nORDER BY fechaCorte;\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Rango Fechas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Rango Fechas').output.value)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "PLIncremental",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PLIncremental",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"anio": {
												"value": "@item().anioCorte",
												"type": "Expression"
											},
											"mes": {
												"value": "@item().mesCorte",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"fechaInicial": {
						"type": "string"
					},
					"fechaFinal": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Clase6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/pipelines/PLIncremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCargaInicial')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PLCargaRangoFechasTrigger",
							"type": "PipelineReference"
						},
						"parameters": {
							"fechaInicial": "[parameters('SCCargaInicial_properties_PLCargaRangoFechasTrigger_parameters_fechaInicial')]",
							"fechaFinal": "[parameters('SCCargaInicial_properties_PLCargaRangoFechasTrigger_parameters_fechaFinal')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2021-04-16T17:45:00Z",
						"timeZone": "UTC",
						"schedule": {
							"monthDays": [
								16
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PLCargaRangoFechasTrigger')]"
			]
		}
	]
}